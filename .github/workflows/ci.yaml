---
name: ci

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      proto_ref:
      proto_sha:
  push:
    branches:
      - main
      - v*
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for PRs
  pull_request:

env:
  VAULT_ADDR: https://vault.eng.aserto.com/
  BUF_REPO: buf.build/aserto-dev/directory
  BUF_VERSION: "1.47.2"
  PYTHON_VERSION: "3.13"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Read Configuration
        uses: hashicorp/vault-action@v3
        id: vault
        with:
          url: ${{ env.VAULT_ADDR }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/data/buf.build "ASERTO_BUF_USER"   | BUF_USER;
            kv/data/buf.build "ASERTO_BUF_TOKEN"  | BUF_TOKEN;
      -
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.CODEGEN_APP_ID }}
          private-key: ${{ secrets.CODEGEN_APP_KEY }}
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
      -
        name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      -
        name: Install Poetry
        uses: snok/install-poetry@v1
      -
        name: Setup buf
        uses: bufbuild/buf-setup-action@v1
        with:
          version: ${{ env.BUF_VERSION }}
          github_token: ${{ github.token }}
          buf_user: ${{ steps.vault.outputs.BUF_USER }}
          buf_api_token: ${{ steps.vault.outputs.BUF_TOKEN}}
      -
        name: Get latest version tag from Buf Registry
        id: buf-latest
        run: |
          echo "VERSION=$(buf registry label list ${BUF_REPO} --format json | jq -r '.labels[0].name')" >> "$GITHUB_OUTPUT"
      -
        name: Delete generated code
        run: rm -rf src/
      -
        name: Buf Generate
        run: |
          echo "${{ env.BUF_REPO }}:${{ steps.buf-latest.outputs.VERSION }}"
          buf generate ${{ env.BUF_REPO }}:${{ steps.buf-latest.outputs.VERSION }} --include-imports
      -
        name: Generate `__init__.py` files
        run: ./init_gen.py src/aserto
      -
        name: Build the python package
        run: poetry build
      -
        name: Commit changes
        if: github.event_name == 'workflow_dispatch'
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          add: 'src'
          push: origin HEAD:main

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    name: Release to pypi
    steps:
      -
        name: Read Configuration
        uses: hashicorp/vault-action@v3
        id: vault
        with:
          url: ${{ env.VAULT_ADDR }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/data/pypi    "API_TOKEN"           | POETRY_HTTP_BASIC_PYPI_PASSWORD;
      -
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.CODEGEN_APP_ID }}
          private-key: ${{ secrets.CODEGEN_APP_KEY }}
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
      -
        name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      -
        name: Install Poetry
        uses: snok/install-poetry@v1
      -
        name: Build and push the python package
        env:
          # When using a PYPI API token, the user name must be set to "__token__"
          POETRY_HTTP_BASIC_PYPI_USERNAME: __token__
        run: poetry publish
      -
        name: Bump to the next version
        run: poetry version patch
      -
        name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: 'Bump to next version'
          add: 'pyproject.toml'
          push: origin HEAD:main
